# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = mandatory-disclosure-rules

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.audit.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
# Entity size increase for submission file uplood
parsers.anyContent.maxLength = 100MB
play.http.parser.maxDiskBuffer = 100MB
play.http.parser.maxMemoryBuffer = 100MB

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

play.modules.enabled += "config.Module"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 200

}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

# Microservice specific config

auditing {
  enabled = false
  event.fileSubmission.enabled = true
  traceRequests = true
  auditSentHeaders = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

mongodb {
  uri = "mongodb://localhost:27017/mandatory-disclosure-rules"
  timeToLiveInSeconds = 900
  subscriptionCacheTTLInSeconds = 10800 //3hrs
  submission.timeToLiveInDays = 28
}

xml {
    validation {
        max-errors = 100
    }
}

enrolmentKeys {
  mdr.key = "HMRC-MDR-ORG"
  mdr.identifier = "MDRID"
}


microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    auth {
      host = localhost
      port = 8500
    }

    submission {
      host = localhost
      port = 10020
      protocol = http
      context = "/dac6/dct72a/v1"
      bearer-token = ""
      environment = ""
    }

    read-subscription {
      host = localhost
      port = 10017
      protocol = http
      context = "/dac6/dct70d/v1"
      bearer-token = ""
      environment = ""
    }

    update-subscription {
      host = localhost
      port = 10020
      protocol = http
      context = "/dac6/dct70e/v1"
      bearer-token = ""
      environment = ""
    }

    eis-response {
      bearer-token = "token"
      wait-time = 10
    }

    email {
      host = localhost
      port = 8300
      protocol = http
    }

    sdes {
      host = localhost
      port = 9191
    }
  }
}

xsd-files {
  fileUpload_MDR_XSDFile = "/xsd/MdrXML_v1.0.xsd"
  submission_DCT72a_XSDFile = "/xsd/DCT72a_MDRSubmissionRequest_v0.1.xsd"
  eisResponse_DCT72B_XSDFile = "/xsd/DCT72b_EIS_Response.xsd"
}

emailTemplates {
    fileUploadSuccessful = "mdr_file_upload_successful"
    fileUploadUnsuccessful = "mdr_file_upload_unsuccessful"
}

max-normal-file-size = 3145728


sdes {
   location = "sdes-stub"
   client-id = "client-id"
   information-type = "mdr-report"
   recipient-or-sender = "mdr-reporting"
}

features {
  sdesFileTransfer = true
}